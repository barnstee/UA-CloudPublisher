@using Opc.Ua.Cloud.Publisher.Models

@model CertManagerModel

@{
    ViewData["Title"] = "Certificate Management";
}

<h1>@ViewData["Title"]</h1>

<div class="container-fluid browser_connect_container">
    <p>
       Certificates currently in the trust list:
    </p>
    <p>
        @Html.ListBox("trust list certificates", Model.Certs, new { disabled = true })
    </p>
    <br />
    <hr style="border-top: 1px solid blue" />
    <br />
    <form method="post" enctype="multipart/form-data" asp-controller="CertManager" asp-action="Load">
        <p>
            Manually load a certificate into the trust list:<br />
        </p>
        <p>
            <input class="btn btn-primary" type="file" name="file">
        </p>
        <p>
            <input id="connectButton" class="btn btn-primary btn_browser" type="submit" value="Load">
        </p>
    </form>
    <br />
    <hr style="border-top: 1px solid blue" />
    <br />
    <p>
        @using (Html.BeginForm("DownloadTrustlist", "CertManager"))
        {
            <input id="disconnectButton" class="btn btn-primary btn_browser" type="submit" value="Download Trust List" />
        }
    </p>
    <br />
    <hr style="border-top: 1px solid blue" />
    <br />
    <form method="post" enctype="multipart/form-data" asp-controller="CertManager" asp-action="EncryptString">
        <p>
            Encrypt a string (to encrypt the password for the user specified in the publishednodes.json file):<br />
            @Html.TextBox("plainTextString", "", new { style = "width:100%;background-color:grey;color:white;" })<br />
        </p>
        <p>
            <input class="btn btn-primary" type="submit" value="Encrypt">
        </p>
        <p>
            Encrypted String (Base64-encoded):<br />
            @Html.Label("N/A", @Model.Encrypt, null)<br />
        </p>
    </form>
</div>

